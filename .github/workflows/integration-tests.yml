name: Integration Tests

on:
  workflow_call:
    inputs:
      go-version:
        description: 'Go version'
        required: true
        type: string

jobs:
  api_tests:
    name: Integration Tests API
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: set up go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ inputs.go-version }}

      - name: run API tests
        run: make test-integration TAGS=api

      - name: upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: api-integration-test-output
          path:
            api-coverage.out

  blob_tests:
    name: Integration Tests Blob
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: set up go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ inputs.go-version }}

      - name: run blob tests
        run: make test-integration-coverage TAGS=blob

      - name: upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: blob-integration-test-output
          path:
            blob-coverage.out

  fraud_tests:
    name: Integration Tests Fraud
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: set up go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ inputs.go-version }}

      - name: run fraud tests
        run: make test-integration TAGS=fraud

      - name: upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: fraud-integration-test-output
          path:
            fraud-coverage.out

  nd_tests:
    name: Integration Tests ND
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: set up go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ inputs.go-version }}

      - name: run nd tests
        run: make test-integration TAGS=nd

      - name: upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: nd-integration-test-output
          path:
            nd-coverage.out

  p2p_tests:
    name: Integration Tests p2p
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: set up go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ inputs.go-version }}

      - name: run p2p tests
        run: make test-integration TAGS=p2p

      - name: upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: p2p-integration-test-output
          path:
            p2p-coverage.out

  reconstruction_tests:
    name: Integration Tests Reconstruction
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: set up go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ inputs.go-version }}

      - name: run reconstruction tests
        run: make test-integration SHORT=true TAGS=reconstruction

      - name: upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: reconstruction-integration-test-output
          path:
            reconstruction-coverage.out

  sync_tests:
    name: Integration Tests Sync
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: set up go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ inputs.go-version }}

      - name: run sync tests
        run: make test-integration SHORT=true TAGS=sync

      - name: upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: sync-integration-test-output
          path:
            sync-coverage.out

  merge:
    runs-on: ubuntu-latest
    needs: [api_tests, blob_tests, fraud_tests, nd_tests, p2p_tests, reconstruction_tests, sync_tests] # yamllint disable-line rule:line-length
    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: coverage-reports

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: coverage-reports
          path: ./coverage-reports

      - run: |
          ls -lah

      - name: Upload to Codecov
        uses: codecov/codecov-action@v2
        with:
          files: ./coverage-reports/*-coverage.out
